#+TITLE: Máquinas de Turing Universales
#+REVEAL_TITLE_SLIDE: <h1>Máquinas de Turing Universales</h1><p>Carlos Eduardo Moreno Vargas y Joaquín Alfredo Castro Córdova</p>
#+REVEAL_THEME: solarized
#+OPTIONS: toc:nil num:nil
#+REVEAL_ROOT: https://cdn.jsdelivr.net/npm/reveal.js@4/

** Contexto
   - Las máquinas de Turing (MT) son modelos matemáticos fundamentales en la teoría de la computación.
   - Se usan para definir formalmente lo que significa "computar".
   - Una máquina de Turing universal (MTU) es una MT capaz de simular cualquier otra MT.

* ¿Qué es una máquina de Turing?
** Definición formal
   - Formalmente, una máquina de Turing es una 7-tupla:
     \[
     M = (Q, \Sigma, \Gamma, \delta, q_0, q_{\text{accept}}, q_{\text{reject}})
     \]

** Componentes (I)
   - \( Q \): conjunto finito de estados
   - \( \Sigma \): alfabeto de entrada (no incluye el blanco)
   - \( \Gamma \): alfabeto de la cinta (incluye el símbolo blanco)
   - \( \delta \): función de transición \( \delta : Q \times \Gamma \rightarrow Q \times \Gamma \times \{L, R\} \)

** Componentes (II)
   - \( q_0 \in Q \): estado inicial
   - \( q_{\text{accept}}, q_{\text{reject}} \in Q \): estados de aceptación y rechazo

** Comparación con autómatas
   - Memoria infinita (la cinta).
   - Cabezal que se mueve en ambas direcciones.
   - Capacidad de escribir en la cinta.

* ¿Qué es una máquina de Turing universal?
** Definición
   - Una MTU es capaz de simular cualquier otra máquina de Turing.

** Notación de simulación
   - Dada la codificación \( \langle M, w \rangle \), la MTU simula la ejecución de \( M \) sobre \( w \):
     \[
     U(\langle M, w \rangle) \rightarrow M(w)
     \]

* Lenguaje universal
** Definición
   - El lenguaje universal \( L_{uni} \) es el conjunto de cadenas binarias de la forma \( w_M 111 y \), donde:
     - \( w_M \) es la codificación binaria de una máquina \( M \).
     - \( y \) es una cadena binaria en \( L(M) \), el conjunto de cadenas aceptadas por \( M \).

** Características
   - Los tres unos consecutivos ('111') sirven para separar la codificación de la máquina \( w_M \) de la entrada \( y \).
   - El lenguaje universal es:
     \[
     L_{uni} = \{ w_M 111 y \mid y \in L(M) \}
     \]

** Propiedad
   - Existe una MTU tal que:
     \[
     L(M_{uni}) = L_{uni}
     \]

* Simulación de máquinas: estructura de Muni
** Vista general
   - Muni puede verse como una máquina de 4 cintas.

** Cinta 1: Entrada
   - Contiene \( w_M111y \).
   - Esta cinta no se modifica durante la simulación.
   - Sirve como referencia constante para la MT original y su entrada.

** Cinta 2: Cinta de simulación
   - Simula la cinta de la máquina \( M \).
   - Cada símbolo se representa como una cadena de ceros: \( 0^i \).
   - Los símbolos están separados entre sí por un 1.
   - Ejemplo de contenido: \( 0^1 \,1\, 0^3 \,1\, 0^2 \) para representar tres símbolos codificados.

** Cinta 3: Cinta de estados
   - Representa el estado actual de la máquina \( M \).
   - Se codifica como una cadena de ceros \( 0^k \), donde \( k \) es el número asociado al estado.
   - Esta cinta se actualiza con cada transición.

** Cinta 4: Cinta auxiliar
   - Se usa para cálculos internos y para hacer *shifting* (desplazamiento de símbolos).
   - Es fundamental para preservar la integridad de la cinta simulada cuando se necesita mover el cabezal o insertar blancos.

* Tareas principales de Muni
** 1. Validación de \( w_M \)
   - Verifica que \( w_M \) codifica una MT válida. Si no es válida, Muni rechaza.

** 2. Codificación de la entrada \( y \)
   - \( 0 \rightarrow 10 \)
   - \( 1 \rightarrow 100 \)
   - Blanco \( \rightarrow 1000 \)

** 3. Estado inicial
   - Se escribe la codificación de \( q_0 \) como \( 0 \).

** 4. Simulación de transiciones
   - Muni busca en la cinta de definición una transición:
     \[
     0^i \, 10^j \, 10^k \, 10^l \, 10^m
     \]

** Explicación de la transición
   - Interpreta:
     - \( 0^i \): estado actual.
     - \( 0^j \): símbolo leído.
     - \( 0^k \): nuevo estado.
     - \( 0^l \): nuevo símbolo.
     - \( 0^m \): dirección (1 → derecha, 2 → izquierda).

** Cinta auxiliar
   - Se usa para hacer shifting al mover el escáner.
   - Mantiene la integridad de la simulación.
   - Es esencial para cambios de símbolos o insertar blancos.

** Condiciones de aceptación
   - Si \( 0^k \in F_M \), Muni acepta.
   - Si no hay transición definida en \( (0^k, 0^n) \), Muni se detiene sin aceptar.

* Consecuencias teóricas
** Teorema
   - El lenguaje universal \( L_{uni} \) es *recursivamente enumerable* pero *no recursivo*.

** Demostración por contradicción
   1. Si fuera recursivo, su complemento también lo sería.
   2. Se podría construir una MT que decida el problema de la parada.
   3. Esto lleva a una contradicción lógica (construcción de \( M_{\text{absurd}} \)).

* El problema de la parada
** Definición
   - \( L_{\text{halt}} = \{ w111y \mid M_w \text{ se detiene con entrada } y \} \)

** Suposición
   - Supongamos que existe una MT que lo decide, \( M_{\text{halt}} \). Se puede construir:
     \[
     M_{\text{absurd}}(w) =
     \begin{cases}
     \text{loop}, & \text{si } M_{\text{halt}}(w111w) = \text{true} \\
     \text{acepta}, & \text{si } M_{\text{halt}}(w111w) = \text{false}
     \end{cases}
     \]

** Contradicción
   - Esto lleva a una contradicción al evaluar \( M_{\text{absurd}}(w_{\text{absurd}}) \).
   - Por lo tanto, el problema de la parada es indecidible.

* Conclusiones
** Ideas clave
   - Las MTU son fundamentales para la computación moderna.
   - Toda computadora real es una implementación práctica de una MTU.
   - La existencia de problemas indecidibles es una de las consecuencias más profundas de la teoría de la computación.

* Gracias
